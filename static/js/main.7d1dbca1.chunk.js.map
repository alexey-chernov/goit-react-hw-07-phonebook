{"version":3,"sources":["components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/FormContacts/FormContacts.js","components/Filter/Filter.js","components/ListContacts/ListContacts.js","App.js","index.js","components/FormContacts/FormContacts.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","createReducer","_","payload","state","filter","id","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","styles","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","post","then","catch","deleteContact","contactId","delete","getContacts","getLoading","getError","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useState","setName","setNumber","handleChange","event","target","value","resetForm","Form","onSubmit","preventDefault","contactsOperations","Label","Input","type","pattern","title","required","onChange","placeholder","mask","Button","Filter","useSelector","contactsSelectors","contactsActions","ContactList","visibleContacts","useEffect","List","map","Item","Text","Span","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1dbca1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2LALo\",\"Item\":\"ListContacts_Item__1md0j\",\"Text\":\"ListContacts_Text__3EW7Y\",\"Span\":\"ListContacts_Span__1L_ta\",\"Button\":\"ListContacts_Button__g8jEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3FoRN\",\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/filter');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport styles from './FormContacts.module.css';\nimport InputMask from 'react-input-mask';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(contactsOperations.addContact(name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Ім'я\n        <input\n          className={styles.Input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Sylvester Stalone\"\n        />\n      </label>\n      <label className={styles.Label}>\n        Номер\n        <InputMask\n          className={styles.Input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефону може складатись з цифр і може скаладтись з пробілів, тире, круглих дужок і може починатись з +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"+38 (099) 999-99-99\"\n          mask=\"+38 (099) 999-99-99\"\n\n        />\n      </label>\n      <button className={styles.Button} type=\"submit\">\n        Додати контакт\n      </button>\n    </form>\n  );\n\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  return (\n    <label className={styles.Label}>\n      Знайдіть контакти за іменем\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.Input}\n        value={filter}\n        onChange={event =>\n          dispatch(contactsActions.filterContact(event.target.value))\n        }\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './ListContacts.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul className={styles.List}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={styles.Item} key={id}>\n          <p className={styles.Text}>\n            {name}: <span className={styles.Span}>{number}</span>\n          </p>\n          <button\n            className={styles.Button}\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContact(id))}\n            title=\"Видалити\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport Filter from './components/Filter';\nimport ContactList from './components/ListContacts';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Телефонний довідник</h1>\n      <ContactForm />\n      <h2>Контакти</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__1PDtW\",\"Label\":\"FormContacts_Label__13aMi\",\"Input\":\"FormContacts_Input__2v-lW\",\"Button\":\"FormContacts_Button__uqumT\"};"],"sourceRoot":""}